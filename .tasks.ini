# vim: set fenc=utf-8 ft=dosini:
# see: https://github.com/skywind3000/asynctasks.vim/wiki/Task-Config

# define a new task named "file-build"
[file-build]

# shell command, use quotation for filenames containing spaces
# check ":AsyncTaskMacro" to see available macros
command:c,cpp=xmake config -m debug && xmake
command:go=go build  -o "$(VIM_PRONAME)"  "$(VIM_FILEDIR)"
command:rust=cargo build

# working directory, can change to $(VIM_ROOT) for project root
cwd=$(VIM_ROOT) 

# output mode, can be one of quickfix and terminal
# - quickfix: output to quickfix window
# - terminal: run the command in the internal terminal
output=quickfix

# this is for output=quickfix only
# if it is omitted, vim's current errorformat will be used.
errorformat=%f:%l:%m

# save file before execute
save=1

[file-build-release]

command:c,cpp=xmake config -m release && xmake
command:rust=cargo build --release

# working directory, can change to $(VIM_ROOT) for project root
cwd=$(VIM_ROOT) 

# output mode, can be one of quickfix and terminal
# - quickfix: output to quickfix window
# - terminal: run the command in the internal terminal
output=quickfix

# this is for output=quickfix only
# if it is omitted, vim's current errorformat will be used.
errorformat=%f:%l:%m

# save file before execute
save=1


[file-run]

command:c,cpp=./build/linux/x86_64/debug/"$(VIM_DIRNAME)"
command:go=./"$(VIM_PRONAME)"
command:rust=cargo run
command:python=python "$(VIM_FILENAME)"
command:javascript=node "$(VIM_FILENAME)"
command:sh=sh "$(VIM_FILENAME)"
command:lua=lua "$(VIM_FILEPATH)"

cmd=$(VIM_ROOT) 

output=terminal

pos=floaterm
